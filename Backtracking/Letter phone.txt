public class Solution {
    public ArrayList<String> letterCombinations(String digits) {
        ArrayList<String> ans =  new ArrayList();
        if(digits.length()==0 ) return ans;
        HashMap<Character,String> map = new HashMap();
        map.put('2',"abc");map.put('3',"def");map.put('4',"ghi");
        map.put('5',"jkl");map.put('6',"mno");map.put('7',"pqrs");
        map.put('8',"tuv");map.put('9',"wxyz");map.put('1',"1");
        map.put('0',"0");
        Deque<String> deck = new ArrayDeque();
        deck.add("");
        for(char ch : digits.toCharArray()){
            String temp = map.get(ch);
            int n = deck.size();
            for(int i=0;i<n;i++ ){
                String pull = deck.pollFirst();
                for(char t:temp.toCharArray() ){
                    deck.add(pull+t);
                }
            }
        }
        while(!deck.isEmpty() ) ans.add(deck.poll());
        return ans;
    }
}